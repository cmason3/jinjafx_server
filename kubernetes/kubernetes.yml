---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jinjafx-ingress
spec:
  ingressClassName: public
  rules:
  - host: jinjafx.<domain>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jinjafx-service
            port:
              number: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: jinjafx-service
spec:
  selector:
    app: jinjafx
  ports:
  - protocol: TCP
    port: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jinjafx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jinjafx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: jinjafx
    spec:
      containers:
      - name: jinjafx
        image: docker.io/cmason3/jinjafx_server:24.6.2-1
        args: ["-pandoc", "-weblog"]
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet: { scheme: HTTP, port: 8080, path: /ping }
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        livenessProbe:
          httpGet: { scheme: HTTP, port: 8080, path: /ping }
          periodSeconds: 30
          timeoutSeconds: 5
        env:
        - name: TZ
          value: "Europe/London"
        - name: JFX_WEBLOG_KEY
          valueFrom:
            secretKeyRef:
              name: jinjafx
              key: jfx-weblog-key

